<Window x:Class="Perfy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:Perfy.ViewModel"
		xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
		xmlns:cmd ="http://www.galasoft.ch/mvvmlight"
		xmlns:dlgs="clr-namespace:MvvmDialogs.Behaviors;assembly=MvvmDialogs"
		x:Name ="_this"
        Title="Perfy Circuit Designer" Height="600" Width="800"
		WindowState="Maximized"
		dlgs:DialogBehavior.DialogViewModels="{Binding Dialogs}"
		DataContext="{Binding Source={StaticResource Locator}, Path=Main}">

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="PreviewKeyDown">
			<cmd:EventToCommand Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True"/>
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Window.InputBindings>
		<KeyBinding Key="N" Modifiers="Control" Command="{Binding NewCommand}" />
		<KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}" />
		<KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
		<KeyBinding Key="F4" Modifiers="Alt" Command="{Binding ExitCommand}" />
		<KeyBinding Key="F1" Modifiers="Control" Command="{Binding HelpCommand}" />
	</Window.InputBindings>

	<Window.Resources>
		
		<Style x:Key="HoleStyle" TargetType="{x:Type Path}">
			<Setter Property="Stroke">
				<Setter.Value>
					<SolidColorBrush Color="{Binding HoleColor}" />
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="JunctionStyle" TargetType="{x:Type Path}">
			<Setter Property="Fill">
				<Setter.Value>
					<SolidColorBrush Color="{Binding JunctionColor}" />
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="HorzStyle" TargetType="{x:Type Path}">
			<Setter Property="Fill">
				<Setter.Value>
					<SolidColorBrush Color="{Binding HorzTrace.Color}" />
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="VertStyle" TargetType="{x:Type Path}">
			<Setter Property="Fill">
				<Setter.Value>
					<SolidColorBrush Color="{Binding VertTrace.Color}" />
				</Setter.Value>
			</Setter>
		</Style>

	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition />
		</Grid.RowDefinitions>
		
		<Menu>
			<MenuItem Header="_File">
				<MenuItem Header="_New"  Command="{Binding NewCommand}" InputGestureText="Control+N"/>
				<MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Control+O"/>
				<MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Control+S"/>
				<MenuItem Header="Save _As" Command="{Binding SaveAsCommand}" />
				<Separator />
				<MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
			</MenuItem>
			<MenuItem Header="_Circuit">
				<MenuItem Header="_Summary" Command="{Binding SummaryCommand}" />
			</MenuItem>
			<MenuItem Header="Hel_p">
				<MenuItem Header="_View Help" Command="{Binding HelpCommand}" InputGestureText="Control-F1"/>
				<MenuItem Header="_About" Command="{Binding AboutCommand}"/>
			</MenuItem>
		</Menu>
		
		<ToolBar Grid.Row="1">
			<ToolBar.Resources>
				<Style x:Key="ToolBarRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}" />
			</ToolBar.Resources>
			<TextBlock Text="Zoom:" VerticalAlignment="Center" Margin="20,0,0,0"/>
			<Button Width="20" Background="CornflowerBlue" Command="{Binding ZoomInCommand}" Content="+" />
			<Button Width="20" Background="CornflowerBlue" Command="{Binding ZoomOutCommand}" Content="-" />
			<TextBlock Text="Layers:" VerticalAlignment="Center" Margin="20,0,5,0"/>
			<RadioButton Content="_Horz" Width="Auto" Style="{StaticResource ToolBarRadioButton}" IsChecked="{Binding HorzLayer}"/>
			<RadioButton Content="_Vert" Width="Auto" Style="{StaticResource ToolBarRadioButton}" IsChecked="{Binding VertLayer}"/>
			<RadioButton Content="_Both" Width="Auto" Style="{StaticResource ToolBarRadioButton}" IsChecked="{Binding BothLayers}"/>
		</ToolBar>
		
		<ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
			<ItemsControl ItemsSource="{Binding Board.BoardItems}" Width="38" Height="26" Background="DarkGreen">
				<ItemsControl.LayoutTransform>
					<ScaleTransform ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
				</ItemsControl.LayoutTransform>
				<ItemsControl.Resources>
					
					<DataTemplate DataType="{x:Type local:PadViewModel}">
						<Canvas Width="1" Height="1">
							<Canvas.RenderTransform>
								<TranslateTransform X="1" Y="1" />
							</Canvas.RenderTransform>

							<!-- Hole -->
							<Path Canvas.Top="0.5" Canvas.Left="0.5" StrokeThickness="0.125" Style="{StaticResource HoleStyle}" Cursor="Hand">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="PreviewMouseDown">
										<cmd:EventToCommand Command="{Binding ElementName=_this, Path=DataContext.HoleSelectedCommand}" CommandParameter="{Binding}"/>
									</i:EventTrigger>
									<i:EventTrigger EventName="PreviewMouseMove">
										<cmd:EventToCommand Command="{Binding ElementName=_this, Path=DataContext.HoleOverCommand}" CommandParameter="{Binding}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
								<Path.Data>
									<EllipseGeometry RadiusX="0.25" RadiusY="0.25" />
								</Path.Data>
							</Path>

							<!-- Junction -->
							<Path Style="{StaticResource JunctionStyle}" Cursor="Hand">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="PreviewMouseDown">
										<cmd:EventToCommand Command="{Binding ElementName=_this, Path=DataContext.JunctionSelectedCommand}" CommandParameter="{Binding}"/>
									</i:EventTrigger>
								</i:Interaction.Triggers>
								<Path.Data>
									<RectangleGeometry Rect="0 0 0.2 0.2" />
								</Path.Data>
							</Path>

							<!-- Horz -->
							<Path Canvas.Top="0" Canvas.Left="0.2" Style="{StaticResource HorzStyle}">
								<Path.Data>
									<RectangleGeometry Rect="0 0 0.8 0.2" />
								</Path.Data>
							</Path>

							<!-- Vert -->
							<Path Canvas.Top="0.2" Canvas.Left="0" Style="{StaticResource VertStyle}">
								<Path.Data>
									<RectangleGeometry Rect="0 0 0.2 0.8" />
								</Path.Data>
							</Path>
							
						</Canvas>
						
					</DataTemplate>

					<DataTemplate DataType="{x:Type local:Label}">
						<TextBlock FontSize="0.75" Foreground="White" Text="{Binding Text}" Width="1" Height="1"
								   HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
							<TextBlock.Style>
								<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
									<Style.Triggers>
										<DataTrigger Binding="{Binding Rotate}" Value="True">
											<Setter Property="RenderTransform">
												<Setter.Value>
													<TransformGroup>
														<RotateTransform Angle="90" />
														<TranslateTransform X="1" Y="0" />
													</TransformGroup>
												</Setter.Value>
											</Setter>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</TextBlock.Style>
							
						</TextBlock>
					</DataTemplate>

				</ItemsControl.Resources>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas />
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemContainerStyle>
					<Style>
						<Setter Property="Canvas.Left" Value="{Binding X}" />
						<Setter Property="Canvas.Top" Value="{Binding Y}" />
					</Style>
				</ItemsControl.ItemContainerStyle>
			</ItemsControl>
		</ScrollViewer>
	</Grid>
</Window>
