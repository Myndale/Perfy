<Window x:Class="Perfy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:local="clr-namespace:Perfy.ViewModel"
		xmlns:behaviors="clr-namespace:Perfy.Behaviors"
		xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
		xmlns:cmd ="http://www.galasoft.ch/mvvmlight"
		xmlns:dlgs="clr-namespace:MvvmDialogs.Behaviors;assembly=MvvmDialogs"		
		xmlns:view="clr-namespace:Perfy.View"
		xmlns:conv="clr-namespace:Perfy.Converters"
		x:Name ="_this"
        Title="{Binding Caption}" Height="600" Width="800"
		WindowState="Maximized"
		dlgs:DialogBehavior.DialogViewModels="{Binding Dialogs}"
		DataContext="{Binding Source={StaticResource Locator}, Path=Main}">

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="PreviewKeyDown">
			<cmd:EventToCommand Command="{Binding PreviewKeyDownCommand}" PassEventArgsToCommand="True"/>
		</i:EventTrigger>
	</i:Interaction.Triggers>

	<Window.InputBindings>
		<KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenCommand}" />
		<KeyBinding Key="N" Modifiers="Control" Command="{Binding NewCommand}" />
		<KeyBinding Key="S" Modifiers="Control" Command="{Binding SaveCommand}" />
		<KeyBinding Key="Z" Modifiers="Control" Command="{Binding UndoCommand}" />
		<KeyBinding Key="Y" Modifiers="Control" Command="{Binding RedoCommand}" />
		<KeyBinding Key="F4" Modifiers="Alt" Command="{Binding ExitCommand}" />
		<KeyBinding Key="F1" Modifiers="Control" Command="{Binding HelpCommand}" />
	</Window.InputBindings>

	<Window.Resources>

		<conv:EnumToBoolConverter x:Key="EnumToBoolConverter" />

		<DataTemplate DataType="{x:Type local:PadViewModel}">
			<view:CellControl MainViewModel="{Binding ElementName=_this, Path=DataContext}" />
		</DataTemplate>
	
		<DataTemplate DataType="{x:Type local:LabelViewModel}">
			<TextBlock FontSize="0.75" Text="{Binding Text}" Width="1" Height="1"
								   HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center">
				<TextBlock.Resources>
					<conv:BindingProxy x:Key="BindingProxy" Data="{Binding}" />
				</TextBlock.Resources>
				<TextBlock.Style>
					<Style TargetType="{x:Type TextBlock}">
						<Setter Property="Foreground" Value="White" />
						<Setter Property="RenderTransform">
							<Setter.Value>
								<TransformGroup>
									<RotateTransform Angle="{Binding Data.Angle, Source={StaticResource BindingProxy}}" />
									<TranslateTransform X="{Binding Data.FrontTranslate.X, Source={StaticResource BindingProxy}}" Y="{Binding Data.FrontTranslate.Y, Source={StaticResource BindingProxy}}" />
									<ScaleTransform ScaleX="{Binding Data.FrontScale.X, Source={StaticResource BindingProxy}}" ScaleY="{Binding Data.FrontScale.Y, Source={StaticResource BindingProxy}}" />
								</TransformGroup>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=_this, Path=DataContext.Perspective}" Value="{x:Static local:Perspective.Rear}">
								<Setter Property="RenderTransform">
									<Setter.Value>
										<TransformGroup>
											<RotateTransform Angle="{Binding Data.Angle, Source={StaticResource BindingProxy}}" />
											<TranslateTransform X="{Binding Data.RearTranslate.X, Source={StaticResource BindingProxy}}" Y="{Binding Data.RearTranslate.Y, Source={StaticResource BindingProxy}}" />
											<ScaleTransform ScaleX="{Binding Data.RearScale.X, Source={StaticResource BindingProxy}}" ScaleY="{Binding Data.RearScale.Y, Source={StaticResource BindingProxy}}" />
										</TransformGroup>
									</Setter.Value>
								</Setter>
							</DataTrigger>
							<DataTrigger Binding="{Binding ElementName=_this, Path=DataContext.ViewMode}" Value="{x:Static local:ViewMode.Template}">
								<Setter Property="Foreground" Value="Black" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</TextBlock.Style>
			</TextBlock>
		</DataTemplate>

	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition />
		</Grid.RowDefinitions>
		
		<Menu>
			<MenuItem Header="_File">
				<MenuItem Header="_New"  Command="{Binding NewCommand}" InputGestureText="Control+N"/>
				<MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Control+O"/>
				<MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Control+S"/>
				<MenuItem Header="Save _As" Command="{Binding SaveAsCommand}" />
				<Separator />
				<!--<MenuItem Header="Print" Command="{Binding PrintCommand}" CommandParameter="{Binding ElementName=CircuitControl}" />-->
				<MenuItem Header="Export Image" Command="{Binding ExportImageCommand}" CommandParameter="{Binding ElementName=CircuitControl}" />
				<Separator />
				<MenuItem Header="E_xit" Command="{Binding ExitCommand}" InputGestureText="Alt+F4"/>
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Header="_Undo"  Command="{Binding UndoCommand}" InputGestureText="Control+Z"/>
				<MenuItem Header="_Redo" Command="{Binding RedoCommand}" InputGestureText="Control+Y"/>				
			</MenuItem>
			<MenuItem Header="_View">
				<Separator />
				<MenuItem Header="Zoom In" Command="{Binding ZoomInCommand}" InputGestureText="+" />
				<MenuItem Header="Zoom Out" Command="{Binding ZoomoutCommand}" InputGestureText="-" />
				<Separator />
				<MenuItem Header="Front" IsCheckable="True" IsChecked="{Binding Perspective, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Perspective.Front}}" />
				<MenuItem Header="Rear" IsCheckable="True" IsChecked="{Binding Perspective, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Perspective.Rear}}" />
				<Separator />
				<MenuItem Header="Normal" IsCheckable="True" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Normal}}" />
				<MenuItem Header="Cuts" IsCheckable="True" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Cuts}}" />
				<MenuItem Header="Pads" IsCheckable="True" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Pads}}" />
				<MenuItem Header="Template" IsCheckable="True" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Template}}" />
			</MenuItem>
			<MenuItem Header="_Circuit">
				<MenuItem Header="Pads" IsCheckable="True" IsChecked="{Binding EditMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:EditMode.Pads}}" />
				<MenuItem Header="Traces" IsCheckable="True" IsChecked="{Binding EditMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:EditMode.Traces}}" />
				<Separator />
				<MenuItem Header="_Summary" Command="{Binding SummaryCommand}" />
			</MenuItem>
			<MenuItem Header="He_lp">
				<MenuItem Header="_View Help" Command="{Binding HelpCommand}" InputGestureText="Control-F1"/>
				<MenuItem Header="_About" Command="{Binding AboutCommand}"/>
			</MenuItem>
		</Menu>
		
		<ToolBar Grid.Row="1">
			<ToolBar.Resources>
				<Style x:Key="ToolBarRadioButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}" />
				<Style x:Key="ToolBarCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}" />
			</ToolBar.Resources>
			
			<TextBlock Text="Zoom:" VerticalAlignment="Center" Margin="20,0,5,0"/>
			<Button Width="20" Background="CornflowerBlue" Command="{Binding ZoomInCommand}" Content="+" />
			<Button Width="20" Background="CornflowerBlue" Command="{Binding ZoomOutCommand}" Content="-" />

			<Separator Margin="10,0,10,0"/>

			<TextBlock Text="Mode:" VerticalAlignment="Center" Margin="0,0,5,0" />
			<RadioButton Content="_Pads" Width="Auto" IsChecked="{Binding EditMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:EditMode.Pads}}" GroupName="EditMode" Style="{StaticResource ToolBarRadioButton}" />
			<RadioButton Content="_Traces" Width="Auto" IsChecked="{Binding EditMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:EditMode.Traces}}" GroupName="EditMode" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />

			<Separator Margin="10,0,10,0"/>

			<TextBlock Text="Perspective:" VerticalAlignment="Center" Margin="0,0,5,0" />
			<RadioButton Content="_Front" Width="Auto" IsChecked="{Binding Perspective, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Perspective.Front}}" GroupName="Perspective" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />
			<RadioButton Content="_Rear" Width="Auto" IsChecked="{Binding Perspective, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:Perspective.Rear}}" GroupName="Perspective" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />

			<Separator Margin="10,0,10,0"/>
			
			<TextBlock Text="View:" VerticalAlignment="Center" Margin="0,0,5,0" />
			<RadioButton Content="Normal" Width="Auto" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Normal}}" GroupName="ViewMode" Style="{StaticResource ToolBarRadioButton}" />
			<RadioButton Content="Cuts" Width="Auto" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Cuts}}" GroupName="ViewMode" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />
			<RadioButton Content="Pads" Width="Auto" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Pads}}" GroupName="ViewMode" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />
			<RadioButton Content="Template" Width="Auto" IsChecked="{Binding ViewMode, Converter={StaticResource EnumToBoolConverter}, ConverterParameter={x:Static local:ViewMode.Template}}" GroupName="ViewMode" Style="{StaticResource ToolBarRadioButton}" Margin="4,0,0,0" />

		</ToolBar>
		
		<ScrollViewer Grid.Row="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
			<ItemsControl x:Name="CircuitControl" ItemsSource="{Binding Board.BoardItems}" Width="38" Height="26" FontSize="1" Background="White">
				<ItemsControl.LayoutTransform>
					<ScaleTransform ScaleX="{Binding Zoom}" ScaleY="{Binding Zoom}" />
				</ItemsControl.LayoutTransform>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas>
							<i:Interaction.Behaviors>
								<behaviors:MouseCaptureBehavior Proxy="{Binding}" />
							</i:Interaction.Behaviors>
							<Canvas.Style>
								<Style TargetType="{x:Type Canvas}">
									<Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
									<Setter Property="RenderTransform">
										<Setter.Value>
											<TransformGroup>
												<ScaleTransform ScaleX="1" ScaleY="1" />
											</TransformGroup>
										</Setter.Value>
									</Setter>
									<Style.Triggers>
										<DataTrigger Binding="{Binding ElementName=_this, Path=DataContext.Perspective}" Value="{x:Static local:Perspective.Rear}">
											<Setter Property="RenderTransform">
												<Setter.Value>
													<TransformGroup>
														<ScaleTransform ScaleX="-1" ScaleY="1" />
														<TranslateTransform X="38" Y="0" />
													</TransformGroup>
												</Setter.Value>
											</Setter>
										</DataTrigger>
										<DataTrigger Binding="{Binding ElementName=_this, Path=DataContext.ViewMode}" Value="{x:Static local:ViewMode.Template}">
											<Setter Property="Background" Value="White" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Canvas.Style>
						</Canvas>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.ItemContainerStyle>
					<Style TargetType="{x:Type ContentPresenter}">
						<Setter Property="Canvas.Left" Value="{Binding X}" />
						<Setter Property="Canvas.Top" Value="{Binding Y}" />
					</Style>
				</ItemsControl.ItemContainerStyle>
			</ItemsControl>
		</ScrollViewer>
	</Grid>
</Window>
